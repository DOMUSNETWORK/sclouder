angular.module('app.services')	.factory('TracksService', dataService);function dataService($q, $log) {	function makeRequest(endpoint, query, limit, linkedPartitioning) {		var deferred = $q.defer();		SC.get(endpoint, {			q: query,			limit: limit,			linked_partitioning: linkedPartitioning		}, function(data, error) {			if (error) {				deferred.reject(dataServiceError(error));			} else {				deferred.resolve(dataServiceCleaner(data));			}		});		return deferred.promise;	}	function search(query) {		return makeRequest('/tracks', query, 6, 1).then(function(data) {			return data;		});	}	function getNext(endpoint, query) {		return makeRequest(endpoint, query, 6, 1).then(function(data) {			return data;		});	}	return {		search: search,		getNext: getNext	};	function dataServiceCleaner(tracks) {		var cleanCollection = [],			cleanObj = {};		angular.forEach(tracks.collection, function(track) {			var stripTrack = {				id: track.id,				title: track.title,				permalink_url: track.permalink_url,				artwork_url: track.artwork_url,				user: {					username: track.user.username				}			};			if (stripTrack.artwork_url === null) {				stripTrack.artwork_url = 'https://i1.sndcdn.com/artworks-000025673460-ep57fm-large.jpg';			}			cleanCollection.push(stripTrack);		});		cleanObj.next_href = tracks.next_href;		cleanObj.collection = cleanCollection;		return cleanObj;	}	function dataServiceError(errorResponse) {		$log.error('XHR Failed for TracksService');		$log.error(errorResponse);		return errorResponse;	}}