angular.module('app.core').controller('SearchController', function($timeout, TracksService, StorageService, $location, data, dataLast, dataLastPage) {	var vm = this;	if (data === false) {		vm.queryVal = '';	} else {		vm.queryVal = data;	}	vm.lastCall = dataLast;	vm.lastPage = dataLastPage;	vm.lastNextResult = false;	vm.results = false;	vm.searching = false;	vm.view = 'list';	if (StorageService.getView()) {		StorageService.getView().then(function(data) {			vm.view = data;		});	}	if (vm.lastCall !== false && vm.lastPage !== 'history') {		StorageService.getLastCall().then(function(response) {			vm.results= response;		}).catch(function(error) {		});	} else if (vm.queryVal !== false && vm.lastPage === 'history') {		TracksService.search(vm.queryVal).then(function(response) {			vm.results= response;		}).catch(function(error) {		});	}	vm.query = function(query) {		vm.searching = true;		vm.lastNextResult = false;		TracksService.search(query).then(function(response) {			vm.results= response;			StorageService.addLastCall(response);			StorageService.addQuery(query);			$timeout(function() {				vm.searching = false;			}, 500);		}).catch(function(error) {		});	};	vm.next = function(endpoint, query) {		if (endpoint.next_href == null) {			vm.lastNextResult = true;		} else {			TracksService.getNext(endpoint.next_href, query).then(function(response) {				if (response.collection.length <= 5) {					var currectResponse = response,						currentCollectionLen = response.collection.length;					TracksService.getNext(currectResponse.next_href, query).then(function(response) {						var extendedResult,							tmpCollection;						tmpCollection = currectResponse.collection.concat(response.collection.slice(currentCollectionLen));						extendedResult = {							collection: tmpCollection,							next_href: currectResponse.next_href						};						return extendedResult;					}).then(function(data) {						vm.results = data;					});				}				vm.results = response;				vm.lastNextResult = false;			}).catch(function(error) {			});			StorageService.addLastCall(endpoint);		}	};	vm.typeahead =  function(query) {		return TracksService.search(query).then(function(response) {			return response.collection.map(function(track) {				var filtered = function(string) {					return string.length >= 4;				};				return track.title.split(' ').filter(filtered).slice(0,2).toString().replace(',', ' ');			});		});	};	vm.trackClick = function(elem, lastCall) {		StorageService.addLastCall(lastCall);		StorageService.addTrack(elem).then(function(data) {			return $location.path('/track/' + elem.id);		});	};	vm.setListView = function() {		vm.view = 'list';		StorageService.addView(vm.view);	};	vm.setGridView = function() {		vm.view = 'grid';		StorageService.addView(vm.view);	};});